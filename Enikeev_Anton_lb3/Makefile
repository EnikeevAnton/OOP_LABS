# Makefile для сборки проекта

# Определяем компилятор и флаги компиляции
CXX = g++
CXXFLAGS = -std=c++17 -I./include

# Папки с исходниками и заголовочными файлами
SRC_DIR = src
OBJ_DIR = obj
BIN_DIR = bin
INC_DIR = include

# Список исходных файлов
SOURCES = $(wildcard $(SRC_DIR)/*.cpp)

# Список объектных файлов (заменяем расширение .cpp на .o)
OBJECTS = $(SOURCES:$(SRC_DIR)/%.cpp=$(OBJ_DIR)/%.o)

# Имя исполнимого файла
EXEC = $(BIN_DIR)/game

# Правило по умолчанию: сборка исполнимого файла
all: $(EXEC)

# Правило для сборки исполнимого файла
$(EXEC): $(OBJECTS)
	@mkdir -p $(BIN_DIR)  # Создаем директорию для исполнимого файла, если она не существует
	$(CXX) $(OBJECTS) -o $(EXEC)

# Правило для компиляции каждого .cpp файла в объектный файл .o
$(OBJ_DIR)/%.o: $(SRC_DIR)/%.cpp
	@mkdir -p $(OBJ_DIR) # Создаем директорию для объектных файлов, если она не существует
	$(CXX) $(CXXFLAGS) -c $< -o $@

# Правило для очистки временных файлов и результата сборки
clean:
	rm -rf $(OBJ_DIR) $(BIN_DIR)

# Правило для пересборки проекта (с удалением всех сгенерированных файлов)
rebuild: clean all

# Правила для удаления объектов и исполнимого файла
.PHONY: all clean rebuild
